// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_ERRORDATA_CANARYLIB_H_
#define FLATBUFFERS_GENERATED_ERRORDATA_CANARYLIB_H_

#include "flatbuffers/flatbuffers.h"

namespace CanaryLib {

struct ErrorData;
struct ErrorDataBuilder;

struct ErrorData FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  typedef ErrorDataBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_MESSAGE = 4
  };
  const flatbuffers::String *message() const {
    return GetPointer<const flatbuffers::String *>(VT_MESSAGE);
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyOffset(verifier, VT_MESSAGE) &&
           verifier.VerifyString(message()) &&
           verifier.EndTable();
  }
};

struct ErrorDataBuilder {
  typedef ErrorData Table;
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_message(flatbuffers::Offset<flatbuffers::String> message) {
    fbb_.AddOffset(ErrorData::VT_MESSAGE, message);
  }
  explicit ErrorDataBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  flatbuffers::Offset<ErrorData> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<ErrorData>(end);
    return o;
  }
};

inline flatbuffers::Offset<ErrorData> CreateErrorData(
    flatbuffers::FlatBufferBuilder &_fbb,
    flatbuffers::Offset<flatbuffers::String> message = 0) {
  ErrorDataBuilder builder_(_fbb);
  builder_.add_message(message);
  return builder_.Finish();
}

inline flatbuffers::Offset<ErrorData> CreateErrorDataDirect(
    flatbuffers::FlatBufferBuilder &_fbb,
    const char *message = nullptr) {
  auto message__ = message ? _fbb.CreateString(message) : 0;
  return CanaryLib::CreateErrorData(
      _fbb,
      message__);
}

inline const CanaryLib::ErrorData *GetErrorData(const void *buf) {
  return flatbuffers::GetRoot<CanaryLib::ErrorData>(buf);
}

inline const CanaryLib::ErrorData *GetSizePrefixedErrorData(const void *buf) {
  return flatbuffers::GetSizePrefixedRoot<CanaryLib::ErrorData>(buf);
}

inline bool VerifyErrorDataBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifyBuffer<CanaryLib::ErrorData>(nullptr);
}

inline bool VerifySizePrefixedErrorDataBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifySizePrefixedBuffer<CanaryLib::ErrorData>(nullptr);
}

inline void FinishErrorDataBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<CanaryLib::ErrorData> root) {
  fbb.Finish(root);
}

inline void FinishSizePrefixedErrorDataBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<CanaryLib::ErrorData> root) {
  fbb.FinishSizePrefixed(root);
}

}  // namespace CanaryLib

#endif  // FLATBUFFERS_GENERATED_ERRORDATA_CANARYLIB_H_
